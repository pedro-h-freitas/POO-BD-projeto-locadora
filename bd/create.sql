-- MySQL Script generated by MySQL Workbench
-- Fri Nov 10 16:36:02 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema locadora_bd
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `locadora_bd` ;

-- -----------------------------------------------------
-- Schema locadora_bd
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `locadora_bd` DEFAULT CHARACTER SET utf8 ;
USE `locadora_bd` ;

-- -----------------------------------------------------
-- Table `funcionario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `funcionario` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(45) NOT NULL,
  `telefone` VARCHAR(45) NOT NULL,
  `salario` INT NOT NULL,
  `senha` VARCHAR(45) NOT NULL,
  `id_locadora` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_funcionario_locadora_idx` (`id_locadora` ASC) INVISIBLE,
  CONSTRAINT `fk_funcionario_locadora`
    FOREIGN KEY (`id_locadora`)
    REFERENCES `locadora` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gerente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gerente` (
  `id_funcionario` INT NOT NULL,
  PRIMARY KEY (`id_funcionario`),
  UNIQUE INDEX `id_funcionario_UNIQUE` (`id_funcionario` ASC) VISIBLE,
  CONSTRAINT `fk_gerente_funcionario`
    FOREIGN KEY (`id_funcionario`)
    REFERENCES `funcionario` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `locadora`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `locadora` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(45) NOT NULL,
  `endereco` VARCHAR(100) NOT NULL,
  `id_gerente` INT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  UNIQUE INDEX `nome_UNIQUE` (`nome` ASC) VISIBLE,
  INDEX `fk_locadora_gerente_idx` (`id_gerente` ASC) INVISIBLE,
  CONSTRAINT `fk_locadora_gerente`
    FOREIGN KEY (`id_gerente`)
    REFERENCES `gerente` (`id_funcionario`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `filme`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `filme` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(45) NOT NULL,
  `ano_lancamento` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  UNIQUE INDEX `nome_UNIQUE` (`nome` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `generos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `generos` (
  `id_filme` INT NOT NULL,
  `nome` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_filme`),
  INDEX `fk_generos_filme_idx` (`id_filme` ASC) VISIBLE,
  CONSTRAINT `fk_generos_filme`
    FOREIGN KEY (`id_filme`)
    REFERENCES `filme` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cliente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cliente` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(45) NOT NULL,
  `cpf` VARCHAR(13) NOT NULL,
  `senha` VARCHAR(45) NOT NULL,
  `endereco` VARCHAR(100) NULL,
  `telefone` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  UNIQUE INDEX `cpf_UNIQUE` (`cpf` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `aluguel`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `aluguel` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `preco_total` INT NOT NULL,
  `data` DATE NOT NULL,
  `id_cliente` INT NOT NULL,
  `id_locadora` INT NOT NULL,
  PRIMARY KEY (`id`, `id_cliente`, `id_locadora`),
  INDEX `fk_alguel_cliente_idx` (`id_cliente` ASC) INVISIBLE,
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_aluguel_locadora_idx` (`id_locadora` ASC) VISIBLE,
  CONSTRAINT `fk_alguel_cliente`
    FOREIGN KEY (`id_cliente`)
    REFERENCES `cliente` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_aluguel_locadora`
    FOREIGN KEY (`id_locadora`)
    REFERENCES `locadora` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `devolucao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `devolucao` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_aluguel` INT NOT NULL,
  `data` DATE NOT NULL,
  `status` ENUM("dentro do prazo", "atrasado", "entregue") NOT NULL DEFAULT 'dentro do prazo',
  `multa` INT NULL DEFAULT 0,
  PRIMARY KEY (`id`, `id_aluguel`),
  INDEX `fk_pagamento_alguel_idx` (`id_aluguel` ASC) INVISIBLE,
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) INVISIBLE,
  CONSTRAINT `fk_pagamento_alguel`
    FOREIGN KEY (`id_aluguel`)
    REFERENCES `aluguel` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `locadora_filme`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `locadora_filme` (
  `id_locadora` INT NOT NULL,
  `id_filme` INT NOT NULL,
  `n_copias` INT NOT NULL,
  `qtd_disponivel` INT NOT NULL,
  PRIMARY KEY (`id_locadora`, `id_filme`),
  INDEX `fk_locadora_filme_filme_idx` (`id_filme` ASC) INVISIBLE,
  INDEX `fk_locadora_filme_locadora_idx` (`id_locadora` ASC) VISIBLE,
  CONSTRAINT `fk_locadora_filme_locadora`
    FOREIGN KEY (`id_locadora`)
    REFERENCES `locadora` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_locadora_filme_filme`
    FOREIGN KEY (`id_filme`)
    REFERENCES `filme` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `filme_alugado`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `filme_alugado` (
  `id_aluguel` INT NOT NULL,
  `id_filme` INT NOT NULL,
  PRIMARY KEY (`id_aluguel`, `id_filme`),
  INDEX `fk_filme_alugado_filme_idx` (`id_filme` ASC) VISIBLE,
  INDEX `fk_filme_alugado_aluguel_idx` (`id_aluguel` ASC) INVISIBLE,
  CONSTRAINT `fk_filme_alugado_aluguel`
    FOREIGN KEY (`id_aluguel`)
    REFERENCES `aluguel` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_filme_alugado_filme`
    FOREIGN KEY (`id_filme`)
    REFERENCES `filme` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

USE `locadora_bd`;

DELIMITER $$
USE `locadora_bd`$$
CREATE TRIGGER devolucao_AFTER_UPDATE 
AFTER UPDATE ON devolucao
FOR EACH ROW
BEGIN
	IF (SELECT devolucao.status FROM devolucao WHERE NEW.id = devolucao.id) = "entregue" THEN
		DELETE FROM filme_alugado WHERE filme_alugado.id_aluguel = devolucao.id_aluguel;
	END IF;
END;$$

USE `locadora_bd`$$
CREATE TRIGGER filme_alugado_BEFORE_INSERT 
BEFORE INSERT ON filme_alugado
FOR EACH ROW
BEGIN
	IF (SELECT qtd_disponivel FROM locadora_filme WHERE locadora_filme.id_filme = NEW.id_filme) = 0 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'Não há o filme no estoque da locadora';
	END IF;
END;$$

USE `locadora_bd`$$
CREATE TRIGGER filme_alugado_AFTER_INSERT 
AFTER INSERT ON filme_alugado
FOR EACH ROW
BEGIN
	UPDATE locadora_filme
    SET qtd_disponivel = qtd_disponivel - 1
    WHERE locadora_filme.id_filme = NEW.id_filme;
END;$$

USE `locadora_bd`$$
CREATE TRIGGER filme_alugado_AFTER_DELETE 
AFTER DELETE ON filme_alugado
FOR EACH ROW
BEGIN
	UPDATE locadora_filme
    SET qtd_disponivel = qtd_disponivel + 1
    WHERE locadora_filme.id_filme = OLD.id_filme;
END;$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
